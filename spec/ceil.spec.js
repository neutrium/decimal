var Decimal = require('../dist/Decimal').Decimal;


function test(cases)
{
    for(var i = 0; i < cases.length; i++)
    {
        var testCase = cases[i];

        if(testCase.length === 2)
        {
            it('should ceil of ' + testCase[1] + ' equal ' + testCase[0], function() {
                expect(new Decimal(testCase[1]).ceil().valueOf()).toEqual(testCase[0]);
            });
        }
        else
        {
            throw Error("Invalid cases");
        }
    }

    return true;
}

describe("Neutrium Decimal Celing Tests", function() {

    beforeEach(function() {
        Decimal.config({
            precision: 20,
            rounding: 4,
            toExpNeg: -100,
            toExpPos: 100,
            minE: -9e15,
            maxE: 9e15
        });
    });

    describe("Decimal base ceil value", function() {

        var cases = [
            ['0', 0],
            ['-0', -0],
            ['Infinity', Infinity],
            ['-Infinity', -Infinity],
            ['NaN', NaN],

            ['1', 0.1],
            ['1', '0.4999999999999999'],
            ['1', 0.5],
            ['1', 0.7],
            ['-0', -0.1],
            ['-0', '-0.4999999999999999'],
            ['-0', -0.5],
            ['-0', -0.7],
            ['1', 1],
            ['2', 1.1],
            ['2', 1.5],
            ['2', 1.7],
            ['-1', -1],
            ['-1', -1.1],
            ['-1', -1.5],
            ['-1', -1.7],

            ['-0', '-0.999'],
            ['2', '1.0000000000000000001'],
            ['2', '1.0000000000000000000000000000000000000000000000000000000000000000000000000000001'],
            ['1', '1e-9000000000000000'],
            ['-0', '-1e-9000000000000000'],
            ['-0', '-9.9e-9000000000000001'],
            ['9.999999e+9000000000000000', '9.999999e+9000000000000000'],
            ['-9.999999e+9000000000000000', '-9.999999e+9000000000000000'],
            ['-Infinity', '-1e+9000000000000001'],
            ['5.5879983320336874473209567979e+287894365', '5.5879983320336874473209567979e+287894365'],
            ['-5.5879983320336874473209567979e+287894365', '-5.5879983320336874473209567979e+287894365'],

            ['-2075364', '-2075364.364286541923'],
            ['60593539780450631', '60593539780450631'],
            ['65937898671515', '65937898671515'],
            ['-39719494751819198566798', '-39719494751819198566798.578'],
            ['92627382695288166557', '92627382695288166556.8683774524284866028260448205069'],
            ['-881574', '-881574'],
            ['-3633239209', '-3633239209.654526163275621746013315304191073405508491056'],
            ['321978830777554620127500540', '321978830777554620127500539.339278568133088682532238002577'],
            ['2074', '2073.532654804291079327244387978249477171032485250998396'],
            ['677676305592', '677676305591.2'],
            ['1', '0.0000000000006'],
            ['39181479479778357', '39181479479778357'],
            ['1', '0.00000000000000000087964700066672916651'],
            ['896', '896'],
            ['115083055948552475', '115083055948552475'],
            ['9105942082143427451223', '9105942082143427451223'],
            ['276312604693909858428', '276312604693909858427.21965306055697011390137926559'],
            ['1', '0.0000252']
        ];

        test(cases);
    });
});